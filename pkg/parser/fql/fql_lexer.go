// Code generated from antlr/FqlLexer.g4 by ANTLR 4.9.2. DO NOT EDIT.

package fql

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 73, 613,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 4, 80, 9, 80, 4,
	81, 9, 81, 4, 82, 9, 82, 4, 83, 9, 83, 4, 84, 9, 84, 3, 2, 3, 2, 3, 2,
	3, 2, 7, 2, 174, 10, 2, 12, 2, 14, 2, 177, 11, 2, 3, 2, 3, 2, 3, 2, 3,
	2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 7, 3, 188, 10, 3, 12, 3, 14, 3, 191, 11,
	3, 3, 3, 3, 3, 3, 4, 6, 4, 196, 10, 4, 13, 4, 14, 4, 197, 3, 4, 3, 4, 3,
	5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3,
	10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15,
	3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3,
	19, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23,
	3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 28, 3,
	28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 5, 29, 263, 10, 29, 3, 30,
	3, 30, 3, 30, 3, 30, 5, 30, 269, 10, 30, 3, 31, 3, 31, 3, 31, 3, 32, 3,
	32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36,
	3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 38, 3,
	38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39,
	3, 39, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3,
	40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41,
	3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3,
	43, 3, 43, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45,
	3, 45, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 47, 3,
	47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 5, 47, 365, 10, 47, 3, 48, 3, 48,
	3, 48, 3, 48, 3, 48, 3, 49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3,
	50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50,
	3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 5, 50, 395, 10, 50, 3, 51, 3, 51, 3,
	51, 3, 51, 3, 52, 3, 52, 3, 52, 3, 52, 3, 52, 3, 53, 3, 53, 3, 53, 3, 53,
	3, 53, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 55, 3, 55, 3, 55, 3, 55, 3,
	55, 3, 55, 3, 56, 3, 56, 3, 56, 3, 56, 3, 57, 3, 57, 3, 57, 3, 57, 3, 58,
	3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 59, 3,
	59, 3, 59, 3, 59, 3, 59, 3, 59, 3, 60, 3, 60, 3, 60, 3, 60, 3, 60, 3, 61,
	3, 61, 3, 61, 3, 61, 5, 61, 455, 10, 61, 3, 62, 3, 62, 3, 62, 3, 63, 3,
	63, 3, 63, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 65, 3, 65, 3, 66,
	6, 66, 472, 10, 66, 13, 66, 14, 66, 473, 3, 66, 3, 66, 7, 66, 478, 10,
	66, 12, 66, 14, 66, 481, 11, 66, 7, 66, 483, 10, 66, 12, 66, 14, 66, 486,
	11, 66, 3, 66, 3, 66, 7, 66, 490, 10, 66, 12, 66, 14, 66, 493, 11, 66,
	7, 66, 495, 10, 66, 12, 66, 14, 66, 498, 11, 66, 3, 67, 3, 67, 3, 68, 3,
	68, 3, 68, 3, 68, 5, 68, 506, 10, 68, 3, 69, 6, 69, 509, 10, 69, 13, 69,
	14, 69, 510, 3, 70, 3, 70, 3, 70, 6, 70, 516, 10, 70, 13, 70, 14, 70, 517,
	3, 70, 5, 70, 521, 10, 70, 3, 70, 3, 70, 5, 70, 525, 10, 70, 5, 70, 527,
	10, 70, 3, 71, 3, 71, 3, 71, 3, 72, 3, 72, 3, 73, 3, 73, 3, 74, 3, 74,
	3, 74, 7, 74, 539, 10, 74, 12, 74, 14, 74, 542, 11, 74, 5, 74, 544, 10,
	74, 3, 75, 3, 75, 5, 75, 548, 10, 75, 3, 75, 6, 75, 551, 10, 75, 13, 75,
	14, 75, 552, 3, 76, 3, 76, 3, 77, 3, 77, 3, 78, 3, 78, 3, 79, 3, 79, 3,
	80, 3, 80, 3, 80, 3, 80, 3, 80, 3, 80, 7, 80, 569, 10, 80, 12, 80, 14,
	80, 572, 11, 80, 3, 80, 3, 80, 3, 81, 3, 81, 3, 81, 3, 81, 3, 81, 3, 81,
	7, 81, 582, 10, 81, 12, 81, 14, 81, 585, 11, 81, 3, 81, 3, 81, 3, 82, 3,
	82, 3, 82, 3, 82, 7, 82, 593, 10, 82, 12, 82, 14, 82, 596, 11, 82, 3, 82,
	3, 82, 3, 83, 3, 83, 3, 83, 3, 83, 7, 83, 604, 10, 83, 12, 83, 14, 83,
	607, 11, 83, 3, 83, 3, 83, 3, 84, 3, 84, 3, 84, 3, 175, 2, 85, 3, 3, 5,
	4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25,
	14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43,
	23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61,
	32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79,
	41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97,
	50, 99, 51, 101, 52, 103, 53, 105, 54, 107, 55, 109, 56, 111, 57, 113,
	58, 115, 59, 117, 60, 119, 61, 121, 62, 123, 63, 125, 64, 127, 65, 129,
	66, 131, 67, 133, 68, 135, 69, 137, 70, 139, 71, 141, 72, 143, 73, 145,
	2, 147, 2, 149, 2, 151, 2, 153, 2, 155, 2, 157, 2, 159, 2, 161, 2, 163,
	2, 165, 2, 167, 2, 3, 2, 14, 5, 2, 12, 12, 15, 15, 8234, 8235, 6, 2, 11,
	11, 13, 14, 34, 34, 162, 162, 3, 2, 50, 59, 5, 2, 50, 59, 67, 72, 99, 104,
	3, 2, 51, 59, 4, 2, 71, 71, 103, 103, 4, 2, 45, 45, 47, 47, 4, 2, 67, 92,
	99, 124, 4, 2, 36, 36, 94, 94, 4, 2, 41, 41, 94, 94, 3, 2, 98, 98, 3, 2,
	182, 182, 2, 637, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2,
	2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2,
	2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2,
	2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3,
	2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39,
	3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2,
	47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2,
	2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2,
	2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2,
	2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3,
	2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85,
	3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2,
	93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2,
	2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107, 3,
	2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2, 2, 2, 2, 113, 3, 2, 2, 2, 2,
	115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119, 3, 2, 2, 2, 2, 121, 3, 2,
	2, 2, 2, 123, 3, 2, 2, 2, 2, 125, 3, 2, 2, 2, 2, 127, 3, 2, 2, 2, 2, 129,
	3, 2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3, 2, 2, 2, 2, 135, 3, 2, 2, 2,
	2, 137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2, 141, 3, 2, 2, 2, 2, 143, 3,
	2, 2, 2, 3, 169, 3, 2, 2, 2, 5, 183, 3, 2, 2, 2, 7, 195, 3, 2, 2, 2, 9,
	201, 3, 2, 2, 2, 11, 205, 3, 2, 2, 2, 13, 207, 3, 2, 2, 2, 15, 209, 3,
	2, 2, 2, 17, 211, 3, 2, 2, 2, 19, 213, 3, 2, 2, 2, 21, 215, 3, 2, 2, 2,
	23, 217, 3, 2, 2, 2, 25, 219, 3, 2, 2, 2, 27, 221, 3, 2, 2, 2, 29, 223,
	3, 2, 2, 2, 31, 225, 3, 2, 2, 2, 33, 227, 3, 2, 2, 2, 35, 229, 3, 2, 2,
	2, 37, 232, 3, 2, 2, 2, 39, 235, 3, 2, 2, 2, 41, 238, 3, 2, 2, 2, 43, 241,
	3, 2, 2, 2, 45, 243, 3, 2, 2, 2, 47, 245, 3, 2, 2, 2, 49, 247, 3, 2, 2,
	2, 51, 249, 3, 2, 2, 2, 53, 251, 3, 2, 2, 2, 55, 254, 3, 2, 2, 2, 57, 262,
	3, 2, 2, 2, 59, 268, 3, 2, 2, 2, 61, 270, 3, 2, 2, 2, 63, 273, 3, 2, 2,
	2, 65, 275, 3, 2, 2, 2, 67, 277, 3, 2, 2, 2, 69, 280, 3, 2, 2, 2, 71, 283,
	3, 2, 2, 2, 73, 287, 3, 2, 2, 2, 75, 294, 3, 2, 2, 2, 77, 302, 3, 2, 2,
	2, 79, 310, 3, 2, 2, 2, 81, 318, 3, 2, 2, 2, 83, 327, 3, 2, 2, 2, 85, 334,
	3, 2, 2, 2, 87, 339, 3, 2, 2, 2, 89, 345, 3, 2, 2, 2, 91, 349, 3, 2, 2,
	2, 93, 364, 3, 2, 2, 2, 95, 366, 3, 2, 2, 2, 97, 371, 3, 2, 2, 2, 99, 394,
	3, 2, 2, 2, 101, 396, 3, 2, 2, 2, 103, 400, 3, 2, 2, 2, 105, 405, 3, 2,
	2, 2, 107, 410, 3, 2, 2, 2, 109, 415, 3, 2, 2, 2, 111, 421, 3, 2, 2, 2,
	113, 425, 3, 2, 2, 2, 115, 429, 3, 2, 2, 2, 117, 439, 3, 2, 2, 2, 119,
	445, 3, 2, 2, 2, 121, 454, 3, 2, 2, 2, 123, 456, 3, 2, 2, 2, 125, 459,
	3, 2, 2, 2, 127, 462, 3, 2, 2, 2, 129, 468, 3, 2, 2, 2, 131, 471, 3, 2,
	2, 2, 133, 499, 3, 2, 2, 2, 135, 505, 3, 2, 2, 2, 137, 508, 3, 2, 2, 2,
	139, 526, 3, 2, 2, 2, 141, 528, 3, 2, 2, 2, 143, 531, 3, 2, 2, 2, 145,
	533, 3, 2, 2, 2, 147, 543, 3, 2, 2, 2, 149, 545, 3, 2, 2, 2, 151, 554,
	3, 2, 2, 2, 153, 556, 3, 2, 2, 2, 155, 558, 3, 2, 2, 2, 157, 560, 3, 2,
	2, 2, 159, 562, 3, 2, 2, 2, 161, 575, 3, 2, 2, 2, 163, 588, 3, 2, 2, 2,
	165, 599, 3, 2, 2, 2, 167, 610, 3, 2, 2, 2, 169, 170, 7, 49, 2, 2, 170,
	171, 7, 44, 2, 2, 171, 175, 3, 2, 2, 2, 172, 174, 11, 2, 2, 2, 173, 172,
	3, 2, 2, 2, 174, 177, 3, 2, 2, 2, 175, 176, 3, 2, 2, 2, 175, 173, 3, 2,
	2, 2, 176, 178, 3, 2, 2, 2, 177, 175, 3, 2, 2, 2, 178, 179, 7, 44, 2, 2,
	179, 180, 7, 49, 2, 2, 180, 181, 3, 2, 2, 2, 181, 182, 8, 2, 2, 2, 182,
	4, 3, 2, 2, 2, 183, 184, 7, 49, 2, 2, 184, 185, 7, 49, 2, 2, 185, 189,
	3, 2, 2, 2, 186, 188, 10, 2, 2, 2, 187, 186, 3, 2, 2, 2, 188, 191, 3, 2,
	2, 2, 189, 187, 3, 2, 2, 2, 189, 190, 3, 2, 2, 2, 190, 192, 3, 2, 2, 2,
	191, 189, 3, 2, 2, 2, 192, 193, 8, 3, 2, 2, 193, 6, 3, 2, 2, 2, 194, 196,
	9, 3, 2, 2, 195, 194, 3, 2, 2, 2, 196, 197, 3, 2, 2, 2, 197, 195, 3, 2,
	2, 2, 197, 198, 3, 2, 2, 2, 198, 199, 3, 2, 2, 2, 199, 200, 8, 4, 2, 2,
	200, 8, 3, 2, 2, 2, 201, 202, 9, 2, 2, 2, 202, 203, 3, 2, 2, 2, 203, 204,
	8, 5, 2, 2, 204, 10, 3, 2, 2, 2, 205, 206, 7, 60, 2, 2, 206, 12, 3, 2,
	2, 2, 207, 208, 7, 61, 2, 2, 208, 14, 3, 2, 2, 2, 209, 210, 7, 48, 2, 2,
	210, 16, 3, 2, 2, 2, 211, 212, 7, 46, 2, 2, 212, 18, 3, 2, 2, 2, 213, 214,
	7, 93, 2, 2, 214, 20, 3, 2, 2, 2, 215, 216, 7, 95, 2, 2, 216, 22, 3, 2,
	2, 2, 217, 218, 7, 42, 2, 2, 218, 24, 3, 2, 2, 2, 219, 220, 7, 43, 2, 2,
	220, 26, 3, 2, 2, 2, 221, 222, 7, 125, 2, 2, 222, 28, 3, 2, 2, 2, 223,
	224, 7, 127, 2, 2, 224, 30, 3, 2, 2, 2, 225, 226, 7, 64, 2, 2, 226, 32,
	3, 2, 2, 2, 227, 228, 7, 62, 2, 2, 228, 34, 3, 2, 2, 2, 229, 230, 7, 63,
	2, 2, 230, 231, 7, 63, 2, 2, 231, 36, 3, 2, 2, 2, 232, 233, 7, 64, 2, 2,
	233, 234, 7, 63, 2, 2, 234, 38, 3, 2, 2, 2, 235, 236, 7, 62, 2, 2, 236,
	237, 7, 63, 2, 2, 237, 40, 3, 2, 2, 2, 238, 239, 7, 35, 2, 2, 239, 240,
	7, 63, 2, 2, 240, 42, 3, 2, 2, 2, 241, 242, 7, 44, 2, 2, 242, 44, 3, 2,
	2, 2, 243, 244, 7, 49, 2, 2, 244, 46, 3, 2, 2, 2, 245, 246, 7, 39, 2, 2,
	246, 48, 3, 2, 2, 2, 247, 248, 7, 45, 2, 2, 248, 50, 3, 2, 2, 2, 249, 250,
	7, 47, 2, 2, 250, 52, 3, 2, 2, 2, 251, 252, 7, 47, 2, 2, 252, 253, 7, 47,
	2, 2, 253, 54, 3, 2, 2, 2, 254, 255, 7, 45, 2, 2, 255, 256, 7, 45, 2, 2,
	256, 56, 3, 2, 2, 2, 257, 258, 7, 67, 2, 2, 258, 259, 7, 80, 2, 2, 259,
	263, 7, 70, 2, 2, 260, 261, 7, 40, 2, 2, 261, 263, 7, 40, 2, 2, 262, 257,
	3, 2, 2, 2, 262, 260, 3, 2, 2, 2, 263, 58, 3, 2, 2, 2, 264, 265, 7, 81,
	2, 2, 265, 269, 7, 84, 2, 2, 266, 267, 7, 126, 2, 2, 267, 269, 7, 126,
	2, 2, 268, 264, 3, 2, 2, 2, 268, 266, 3, 2, 2, 2, 269, 60, 3, 2, 2, 2,
	270, 271, 5, 15, 8, 2, 271, 272, 5, 15, 8, 2, 272, 62, 3, 2, 2, 2, 273,
	274, 7, 63, 2, 2, 274, 64, 3, 2, 2, 2, 275, 276, 7, 65, 2, 2, 276, 66,
	3, 2, 2, 2, 277, 278, 7, 35, 2, 2, 278, 279, 7, 128, 2, 2, 279, 68, 3,
	2, 2, 2, 280, 281, 7, 63, 2, 2, 281, 282, 7, 128, 2, 2, 282, 70, 3, 2,
	2, 2, 283, 284, 7, 72, 2, 2, 284, 285, 7, 81, 2, 2, 285, 286, 7, 84, 2,
	2, 286, 72, 3, 2, 2, 2, 287, 288, 7, 84, 2, 2, 288, 289, 7, 71, 2, 2, 289,
	290, 7, 86, 2, 2, 290, 291, 7, 87, 2, 2, 291, 292, 7, 84, 2, 2, 292, 293,
	7, 80, 2, 2, 293, 74, 3, 2, 2, 2, 294, 295, 7, 89, 2, 2, 295, 296, 7, 67,
	2, 2, 296, 297, 7, 75, 2, 2, 297, 298, 7, 86, 2, 2, 298, 299, 7, 72, 2,
	2, 299, 300, 7, 81, 2, 2, 300, 301, 7, 84, 2, 2, 301, 76, 3, 2, 2, 2, 302,
	303, 7, 81, 2, 2, 303, 304, 7, 82, 2, 2, 304, 305, 7, 86, 2, 2, 305, 306,
	7, 75, 2, 2, 306, 307, 7, 81, 2, 2, 307, 308, 7, 80, 2, 2, 308, 309, 7,
	85, 2, 2, 309, 78, 3, 2, 2, 2, 310, 311, 7, 86, 2, 2, 311, 312, 7, 75,
	2, 2, 312, 313, 7, 79, 2, 2, 313, 314, 7, 71, 2, 2, 314, 315, 7, 81, 2,
	2, 315, 316, 7, 87, 2, 2, 316, 317, 7, 86, 2, 2, 317, 80, 3, 2, 2, 2, 318,
	319, 7, 70, 2, 2, 319, 320, 7, 75, 2, 2, 320, 321, 7, 85, 2, 2, 321, 322,
	7, 86, 2, 2, 322, 323, 7, 75, 2, 2, 323, 324, 7, 80, 2, 2, 324, 325, 7,
	69, 2, 2, 325, 326, 7, 86, 2, 2, 326, 82, 3, 2, 2, 2, 327, 328, 7, 72,
	2, 2, 328, 329, 7, 75, 2, 2, 329, 330, 7, 78, 2, 2, 330, 331, 7, 86, 2,
	2, 331, 332, 7, 71, 2, 2, 332, 333, 7, 84, 2, 2, 333, 84, 3, 2, 2, 2, 334,
	335, 7, 85, 2, 2, 335, 336, 7, 81, 2, 2, 336, 337, 7, 84, 2, 2, 337, 338,
	7, 86, 2, 2, 338, 86, 3, 2, 2, 2, 339, 340, 7, 78, 2, 2, 340, 341, 7, 75,
	2, 2, 341, 342, 7, 79, 2, 2, 342, 343, 7, 75, 2, 2, 343, 344, 7, 86, 2,
	2, 344, 88, 3, 2, 2, 2, 345, 346, 7, 78, 2, 2, 346, 347, 7, 71, 2, 2, 347,
	348, 7, 86, 2, 2, 348, 90, 3, 2, 2, 2, 349, 350, 7, 69, 2, 2, 350, 351,
	7, 81, 2, 2, 351, 352, 7, 78, 2, 2, 352, 353, 7, 78, 2, 2, 353, 354, 7,
	71, 2, 2, 354, 355, 7, 69, 2, 2, 355, 356, 7, 86, 2, 2, 356, 92, 3, 2,
	2, 2, 357, 358, 7, 67, 2, 2, 358, 359, 7, 85, 2, 2, 359, 365, 7, 69, 2,
	2, 360, 361, 7, 70, 2, 2, 361, 362, 7, 71, 2, 2, 362, 363, 7, 85, 2, 2,
	363, 365, 7, 69, 2, 2, 364, 357, 3, 2, 2, 2, 364, 360, 3, 2, 2, 2, 365,
	94, 3, 2, 2, 2, 366, 367, 7, 80, 2, 2, 367, 368, 7, 81, 2, 2, 368, 369,
	7, 80, 2, 2, 369, 370, 7, 71, 2, 2, 370, 96, 3, 2, 2, 2, 371, 372, 7, 80,
	2, 2, 372, 373, 7, 87, 2, 2, 373, 374, 7, 78, 2, 2, 374, 375, 7, 78, 2,
	2, 375, 98, 3, 2, 2, 2, 376, 377, 7, 86, 2, 2, 377, 378, 7, 84, 2, 2, 378,
	379, 7, 87, 2, 2, 379, 395, 7, 71, 2, 2, 380, 381, 7, 118, 2, 2, 381, 382,
	7, 116, 2, 2, 382, 383, 7, 119, 2, 2, 383, 395, 7, 103, 2, 2, 384, 385,
	7, 72, 2, 2, 385, 386, 7, 67, 2, 2, 386, 387, 7, 78, 2, 2, 387, 388, 7,
	85, 2, 2, 388, 395, 7, 71, 2, 2, 389, 390, 7, 104, 2, 2, 390, 391, 7, 99,
	2, 2, 391, 392, 7, 110, 2, 2, 392, 393, 7, 117, 2, 2, 393, 395, 7, 103,
	2, 2, 394, 376, 3, 2, 2, 2, 394, 380, 3, 2, 2, 2, 394, 384, 3, 2, 2, 2,
	394, 389, 3, 2, 2, 2, 395, 100, 3, 2, 2, 2, 396, 397, 7, 87, 2, 2, 397,
	398, 7, 85, 2, 2, 398, 399, 7, 71, 2, 2, 399, 102, 3, 2, 2, 2, 400, 401,
	7, 75, 2, 2, 401, 402, 7, 80, 2, 2, 402, 403, 7, 86, 2, 2, 403, 404, 7,
	81, 2, 2, 404, 104, 3, 2, 2, 2, 405, 406, 7, 77, 2, 2, 406, 407, 7, 71,
	2, 2, 407, 408, 7, 71, 2, 2, 408, 409, 7, 82, 2, 2, 409, 106, 3, 2, 2,
	2, 410, 411, 7, 89, 2, 2, 411, 412, 7, 75, 2, 2, 412, 413, 7, 86, 2, 2,
	413, 414, 7, 74, 2, 2, 414, 108, 3, 2, 2, 2, 415, 416, 7, 69, 2, 2, 416,
	417, 7, 81, 2, 2, 417, 418, 7, 87, 2, 2, 418, 419, 7, 80, 2, 2, 419, 420,
	7, 86, 2, 2, 420, 110, 3, 2, 2, 2, 421, 422, 7, 67, 2, 2, 422, 423, 7,
	78, 2, 2, 423, 424, 7, 78, 2, 2, 424, 112, 3, 2, 2, 2, 425, 426, 7, 67,
	2, 2, 426, 427, 7, 80, 2, 2, 427, 428, 7, 91, 2, 2, 428, 114, 3, 2, 2,
	2, 429, 430, 7, 67, 2, 2, 430, 431, 7, 73, 2, 2, 431, 432, 7, 73, 2, 2,
	432, 433, 7, 84, 2, 2, 433, 434, 7, 71, 2, 2, 434, 435, 7, 73, 2, 2, 435,
	436, 7, 67, 2, 2, 436, 437, 7, 86, 2, 2, 437, 438, 7, 71, 2, 2, 438, 116,
	3, 2, 2, 2, 439, 440, 7, 71, 2, 2, 440, 441, 7, 88, 2, 2, 441, 442, 7,
	71, 2, 2, 442, 443, 7, 80, 2, 2, 443, 444, 7, 86, 2, 2, 444, 118, 3, 2,
	2, 2, 445, 446, 7, 78, 2, 2, 446, 447, 7, 75, 2, 2, 447, 448, 7, 77, 2,
	2, 448, 449, 7, 71, 2, 2, 449, 120, 3, 2, 2, 2, 450, 451, 7, 80, 2, 2,
	451, 452, 7, 81, 2, 2, 452, 455, 7, 86, 2, 2, 453, 455, 7, 35, 2, 2, 454,
	450, 3, 2, 2, 2, 454, 453, 3, 2, 2, 2, 455, 122, 3, 2, 2, 2, 456, 457,
	7, 75, 2, 2, 457, 458, 7, 80, 2, 2, 458, 124, 3, 2, 2, 2, 459, 460, 7,
	70, 2, 2, 460, 461, 7, 81, 2, 2, 461, 126, 3, 2, 2, 2, 462, 463, 7, 89,
	2, 2, 463, 464, 7, 74, 2, 2, 464, 465, 7, 75, 2, 2, 465, 466, 7, 78, 2,
	2, 466, 467, 7, 71, 2, 2, 467, 128, 3, 2, 2, 2, 468, 469, 7, 66, 2, 2,
	469, 130, 3, 2, 2, 2, 470, 472, 5, 151, 76, 2, 471, 470, 3, 2, 2, 2, 472,
	473, 3, 2, 2, 2, 473, 471, 3, 2, 2, 2, 473, 474, 3, 2, 2, 2, 474, 484,
	3, 2, 2, 2, 475, 479, 5, 153, 77, 2, 476, 478, 5, 131, 66, 2, 477, 476,
	3, 2, 2, 2, 478, 481, 3, 2, 2, 2, 479, 477, 3, 2, 2, 2, 479, 480, 3, 2,
	2, 2, 480, 483, 3, 2, 2, 2, 481, 479, 3, 2, 2, 2, 482, 475, 3, 2, 2, 2,
	483, 486, 3, 2, 2, 2, 484, 482, 3, 2, 2, 2, 484, 485, 3, 2, 2, 2, 485,
	496, 3, 2, 2, 2, 486, 484, 3, 2, 2, 2, 487, 491, 5, 157, 79, 2, 488, 490,
	5, 131, 66, 2, 489, 488, 3, 2, 2, 2, 490, 493, 3, 2, 2, 2, 491, 489, 3,
	2, 2, 2, 491, 492, 3, 2, 2, 2, 492, 495, 3, 2, 2, 2, 493, 491, 3, 2, 2,
	2, 494, 487, 3, 2, 2, 2, 495, 498, 3, 2, 2, 2, 496, 494, 3, 2, 2, 2, 496,
	497, 3, 2, 2, 2, 497, 132, 3, 2, 2, 2, 498, 496, 3, 2, 2, 2, 499, 500,
	5, 155, 78, 2, 500, 134, 3, 2, 2, 2, 501, 506, 5, 161, 81, 2, 502, 506,
	5, 159, 80, 2, 503, 506, 5, 163, 82, 2, 504, 506, 5, 165, 83, 2, 505, 501,
	3, 2, 2, 2, 505, 502, 3, 2, 2, 2, 505, 503, 3, 2, 2, 2, 505, 504, 3, 2,
	2, 2, 506, 136, 3, 2, 2, 2, 507, 509, 9, 4, 2, 2, 508, 507, 3, 2, 2, 2,
	509, 510, 3, 2, 2, 2, 510, 508, 3, 2, 2, 2, 510, 511, 3, 2, 2, 2, 511,
	138, 3, 2, 2, 2, 512, 513, 5, 147, 74, 2, 513, 515, 5, 15, 8, 2, 514, 516,
	9, 4, 2, 2, 515, 514, 3, 2, 2, 2, 516, 517, 3, 2, 2, 2, 517, 515, 3, 2,
	2, 2, 517, 518, 3, 2, 2, 2, 518, 520, 3, 2, 2, 2, 519, 521, 5, 149, 75,
	2, 520, 519, 3, 2, 2, 2, 520, 521, 3, 2, 2, 2, 521, 527, 3, 2, 2, 2, 522,
	524, 5, 147, 74, 2, 523, 525, 5, 149, 75, 2, 524, 523, 3, 2, 2, 2, 524,
	525, 3, 2, 2, 2, 525, 527, 3, 2, 2, 2, 526, 512, 3, 2, 2, 2, 526, 522,
	3, 2, 2, 2, 527, 140, 3, 2, 2, 2, 528, 529, 5, 131, 66, 2, 529, 530, 5,
	167, 84, 2, 530, 142, 3, 2, 2, 2, 531, 532, 11, 2, 2, 2, 532, 144, 3, 2,
	2, 2, 533, 534, 9, 5, 2, 2, 534, 146, 3, 2, 2, 2, 535, 544, 7, 50, 2, 2,
	536, 540, 9, 6, 2, 2, 537, 539, 9, 4, 2, 2, 538, 537, 3, 2, 2, 2, 539,
	542, 3, 2, 2, 2, 540, 538, 3, 2, 2, 2, 540, 541, 3, 2, 2, 2, 541, 544,
	3, 2, 2, 2, 542, 540, 3, 2, 2, 2, 543, 535, 3, 2, 2, 2, 543, 536, 3, 2,
	2, 2, 544, 148, 3, 2, 2, 2, 545, 547, 9, 7, 2, 2, 546, 548, 9, 8, 2, 2,
	547, 546, 3, 2, 2, 2, 547, 548, 3, 2, 2, 2, 548, 550, 3, 2, 2, 2, 549,
	551, 9, 4, 2, 2, 550, 549, 3, 2, 2, 2, 551, 552, 3, 2, 2, 2, 552, 550,
	3, 2, 2, 2, 552, 553, 3, 2, 2, 2, 553, 150, 3, 2, 2, 2, 554, 555, 9, 9,
	2, 2, 555, 152, 3, 2, 2, 2, 556, 557, 5, 155, 78, 2, 557, 154, 3, 2, 2,
	2, 558, 559, 7, 97, 2, 2, 559, 156, 3, 2, 2, 2, 560, 561, 4, 50, 59, 2,
	561, 158, 3, 2, 2, 2, 562, 570, 7, 36, 2, 2, 563, 564, 7, 94, 2, 2, 564,
	569, 11, 2, 2, 2, 565, 566, 7, 36, 2, 2, 566, 569, 7, 36, 2, 2, 567, 569,
	10, 10, 2, 2, 568, 563, 3, 2, 2, 2, 568, 565, 3, 2, 2, 2, 568, 567, 3,
	2, 2, 2, 569, 572, 3, 2, 2, 2, 570, 568, 3, 2, 2, 2, 570, 571, 3, 2, 2,
	2, 571, 573, 3, 2, 2, 2, 572, 570, 3, 2, 2, 2, 573, 574, 7, 36, 2, 2, 574,
	160, 3, 2, 2, 2, 575, 583, 7, 41, 2, 2, 576, 577, 7, 94, 2, 2, 577, 582,
	11, 2, 2, 2, 578, 579, 7, 41, 2, 2, 579, 582, 7, 41, 2, 2, 580, 582, 10,
	11, 2, 2, 581, 576, 3, 2, 2, 2, 581, 578, 3, 2, 2, 2, 581, 580, 3, 2, 2,
	2, 582, 585, 3, 2, 2, 2, 583, 581, 3, 2, 2, 2, 583, 584, 3, 2, 2, 2, 584,
	586, 3, 2, 2, 2, 585, 583, 3, 2, 2, 2, 586, 587, 7, 41, 2, 2, 587, 162,
	3, 2, 2, 2, 588, 594, 7, 98, 2, 2, 589, 590, 7, 94, 2, 2, 590, 593, 7,
	98, 2, 2, 591, 593, 10, 12, 2, 2, 592, 589, 3, 2, 2, 2, 592, 591, 3, 2,
	2, 2, 593, 596, 3, 2, 2, 2, 594, 592, 3, 2, 2, 2, 594, 595, 3, 2, 2, 2,
	595, 597, 3, 2, 2, 2, 596, 594, 3, 2, 2, 2, 597, 598, 7, 98, 2, 2, 598,
	164, 3, 2, 2, 2, 599, 605, 7, 182, 2, 2, 600, 601, 7, 94, 2, 2, 601, 604,
	7, 182, 2, 2, 602, 604, 10, 13, 2, 2, 603, 600, 3, 2, 2, 2, 603, 602, 3,
	2, 2, 2, 604, 607, 3, 2, 2, 2, 605, 603, 3, 2, 2, 2, 605, 606, 3, 2, 2,
	2, 606, 608, 3, 2, 2, 2, 607, 605, 3, 2, 2, 2, 608, 609, 7, 182, 2, 2,
	609, 166, 3, 2, 2, 2, 610, 611, 7, 60, 2, 2, 611, 612, 7, 60, 2, 2, 612,
	168, 3, 2, 2, 2, 34, 2, 175, 189, 197, 262, 268, 364, 394, 454, 473, 479,
	484, 491, 496, 505, 510, 517, 520, 524, 526, 540, 543, 547, 552, 568, 570,
	581, 583, 592, 594, 603, 605, 3, 2, 3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "':'", "';'", "'.'", "','", "'['", "']'", "'('", "')'",
	"'{'", "'}'", "'>'", "'<'", "'=='", "'>='", "'<='", "'!='", "'*'", "'/'",
	"'%'", "'+'", "'-'", "'--'", "'++'", "", "", "", "'='", "'?'", "'!~'",
	"'=~'", "'FOR'", "'RETURN'", "'WAITFOR'", "'OPTIONS'", "'TIMEOUT'", "'DISTINCT'",
	"'FILTER'", "'SORT'", "'LIMIT'", "'LET'", "'COLLECT'", "", "'NONE'", "'NULL'",
	"", "'USE'", "'INTO'", "'KEEP'", "'WITH'", "'COUNT'", "'ALL'", "'ANY'",
	"'AGGREGATE'", "'EVENT'", "'LIKE'", "", "'IN'", "'DO'", "'WHILE'", "'@'",
}

var lexerSymbolicNames = []string{
	"", "MultiLineComment", "SingleLineComment", "WhiteSpaces", "LineTerminator",
	"Colon", "SemiColon", "Dot", "Comma", "OpenBracket", "CloseBracket", "OpenParen",
	"CloseParen", "OpenBrace", "CloseBrace", "Gt", "Lt", "Eq", "Gte", "Lte",
	"Neq", "Multi", "Div", "Mod", "Plus", "Minus", "MinusMinus", "PlusPlus",
	"And", "Or", "Range", "Assign", "QuestionMark", "RegexNotMatch", "RegexMatch",
	"For", "Return", "Waitfor", "Options", "Timeout", "Distinct", "Filter",
	"Sort", "Limit", "Let", "Collect", "SortDirection", "None", "Null", "BooleanLiteral",
	"Use", "Into", "Keep", "With", "Count", "All", "Any", "Aggregate", "Event",
	"Like", "Not", "In", "Do", "While", "Param", "Identifier", "IgnoreIdentifier",
	"StringLiteral", "IntegerLiteral", "FloatLiteral", "NamespaceSegment",
	"UnknownIdentifier",
}

var lexerRuleNames = []string{
	"MultiLineComment", "SingleLineComment", "WhiteSpaces", "LineTerminator",
	"Colon", "SemiColon", "Dot", "Comma", "OpenBracket", "CloseBracket", "OpenParen",
	"CloseParen", "OpenBrace", "CloseBrace", "Gt", "Lt", "Eq", "Gte", "Lte",
	"Neq", "Multi", "Div", "Mod", "Plus", "Minus", "MinusMinus", "PlusPlus",
	"And", "Or", "Range", "Assign", "QuestionMark", "RegexNotMatch", "RegexMatch",
	"For", "Return", "Waitfor", "Options", "Timeout", "Distinct", "Filter",
	"Sort", "Limit", "Let", "Collect", "SortDirection", "None", "Null", "BooleanLiteral",
	"Use", "Into", "Keep", "With", "Count", "All", "Any", "Aggregate", "Event",
	"Like", "Not", "In", "Do", "While", "Param", "Identifier", "IgnoreIdentifier",
	"StringLiteral", "IntegerLiteral", "FloatLiteral", "NamespaceSegment",
	"UnknownIdentifier", "HexDigit", "DecimalIntegerLiteral", "ExponentPart",
	"Letter", "Symbols", "Underscore", "Digit", "DQSring", "SQString", "BacktickString",
	"TickString", "NamespaceSeparator",
}

type FqlLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewFqlLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *FqlLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewFqlLexer(input antlr.CharStream) *FqlLexer {
	l := new(FqlLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "FqlLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FqlLexer tokens.
const (
	FqlLexerMultiLineComment  = 1
	FqlLexerSingleLineComment = 2
	FqlLexerWhiteSpaces       = 3
	FqlLexerLineTerminator    = 4
	FqlLexerColon             = 5
	FqlLexerSemiColon         = 6
	FqlLexerDot               = 7
	FqlLexerComma             = 8
	FqlLexerOpenBracket       = 9
	FqlLexerCloseBracket      = 10
	FqlLexerOpenParen         = 11
	FqlLexerCloseParen        = 12
	FqlLexerOpenBrace         = 13
	FqlLexerCloseBrace        = 14
	FqlLexerGt                = 15
	FqlLexerLt                = 16
	FqlLexerEq                = 17
	FqlLexerGte               = 18
	FqlLexerLte               = 19
	FqlLexerNeq               = 20
	FqlLexerMulti             = 21
	FqlLexerDiv               = 22
	FqlLexerMod               = 23
	FqlLexerPlus              = 24
	FqlLexerMinus             = 25
	FqlLexerMinusMinus        = 26
	FqlLexerPlusPlus          = 27
	FqlLexerAnd               = 28
	FqlLexerOr                = 29
	FqlLexerRange             = 30
	FqlLexerAssign            = 31
	FqlLexerQuestionMark      = 32
	FqlLexerRegexNotMatch     = 33
	FqlLexerRegexMatch        = 34
	FqlLexerFor               = 35
	FqlLexerReturn            = 36
	FqlLexerWaitfor           = 37
	FqlLexerOptions           = 38
	FqlLexerTimeout           = 39
	FqlLexerDistinct          = 40
	FqlLexerFilter            = 41
	FqlLexerSort              = 42
	FqlLexerLimit             = 43
	FqlLexerLet               = 44
	FqlLexerCollect           = 45
	FqlLexerSortDirection     = 46
	FqlLexerNone              = 47
	FqlLexerNull              = 48
	FqlLexerBooleanLiteral    = 49
	FqlLexerUse               = 50
	FqlLexerInto              = 51
	FqlLexerKeep              = 52
	FqlLexerWith              = 53
	FqlLexerCount             = 54
	FqlLexerAll               = 55
	FqlLexerAny               = 56
	FqlLexerAggregate         = 57
	FqlLexerEvent             = 58
	FqlLexerLike              = 59
	FqlLexerNot               = 60
	FqlLexerIn                = 61
	FqlLexerDo                = 62
	FqlLexerWhile             = 63
	FqlLexerParam             = 64
	FqlLexerIdentifier        = 65
	FqlLexerIgnoreIdentifier  = 66
	FqlLexerStringLiteral     = 67
	FqlLexerIntegerLiteral    = 68
	FqlLexerFloatLiteral      = 69
	FqlLexerNamespaceSegment  = 70
	FqlLexerUnknownIdentifier = 71
)

#!/usr/bin/python3

import os
import re
import sys

from extract import get_doc_extracts
from extract import get_token_impl_map
from files import dump_yaml
from files import walk_implementations
from files import walk_indices
from transform import transform_extract


def main():
  arg = sys.argv[-1]

  if arg == 'help':
    print('Generate stdlib documentation')
    return

  stdlib_path = arg
  stdlib_path = os.path.abspath(stdlib_path)

  token_impl_map = {}
  representations = {}

  # Extract the names of methods from lib.go
  for file in walk_indices(stdlib_path):
    for token in get_token_impl_map(file):
      token_impl_map.update(**token)

  # Extract the documentation data
  for file in walk_implementations(stdlib_path):
    for extract in get_doc_extracts(file, stdlib_path, token_impl_map):
      package = extract.token_package

      if not representations.get(package):
        representations[package] = []

      representations[package].append({
        'token': extract.token_name,
        'file_name': extract.file_name,
        'line_number': extract.line_number,
        'doc': transform_extract(extract),
      })

  dump_yaml(representations, 'stdlib-docs-rep.yaml')


if __name__ == '__main__':
  main()

token literal names:
null
null
null
null
null
':'
';'
'.'
','
'['
']'
'('
')'
'{'
'}'
'>'
'<'
'=='
'>='
'<='
'!='
'*'
'/'
'%'
'+'
'-'
'--'
'++'
null
null
null
'='
'?'
'!~'
'=~'
'FOR'
'RETURN'
'DISTINCT'
'FILTER'
'SORT'
'LIMIT'
'LET'
'COLLECT'
null
'NONE'
'NULL'
null
'USE'
'AS'
'INTO'
'KEEP'
'WITH'
'COUNT'
'ALL'
'ANY'
'AGGREGATE'
'LIKE'
null
'IN'
'@'
null
null
null
null
null

token symbolic names:
null
MultiLineComment
SingleLineComment
WhiteSpaces
LineTerminator
Colon
SemiColon
Dot
Comma
OpenBracket
CloseBracket
OpenParen
CloseParen
OpenBrace
CloseBrace
Gt
Lt
Eq
Gte
Lte
Neq
Multi
Div
Mod
Plus
Minus
MinusMinus
PlusPlus
And
Or
Range
Assign
QuestionMark
RegexNotMatch
RegexMatch
For
Return
Distinct
Filter
Sort
Limit
Let
Collect
SortDirection
None
Null
BooleanLiteral
Use
As
Into
Keep
With
Count
All
Any
Aggregate
Like
Not
In
Param
Identifier
StringLiteral
IntegerLiteral
FloatLiteral
NamespaceSegment

rule names:
program
useExpression
useExpressionAs
body


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 66, 20, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 2, 2, 6, 2, 4, 6, 8, 2, 2, 2, 15, 2, 10, 3, 2, 2, 2, 4, 12, 3, 2, 2, 2, 6, 14, 3, 2, 2, 2, 8, 17, 3, 2, 2, 2, 10, 11, 5, 8, 5, 2, 11, 3, 3, 2, 2, 2, 12, 13, 5, 6, 4, 2, 13, 5, 3, 2, 2, 2, 14, 15, 7, 49, 2, 2, 15, 16, 7, 50, 2, 2, 16, 7, 3, 2, 2, 2, 17, 18, 5, 4, 3, 2, 18, 9, 3, 2, 2, 2, 2]